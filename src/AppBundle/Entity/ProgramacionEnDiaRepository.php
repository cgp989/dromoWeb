<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProgramacionEnDiaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProgramacionEnDiaRepository extends EntityRepository
{
    /**
     * @param type $array
     * @return boolean
     */ 
    public function ordenarPorDistanciaALocal(&$array) {
        return uasort($array, function(ProgramacionEnDia $a, ProgramacionEnDia $b) {
            return $a->compareTo($b);
        }
        );
    }
    
    /**
     * 
     * @param integer $idProgramacion
     */
    public function findByIdProgramacion($idProgramacion){
        $query = $this->getEntityManager()
            ->createQuery(
                "select pd
                from AppBundle:ProgramacionEnDia pd
                    join pd.programacion p
                where p.id=:idProgramacion")
            ->setParameter('idProgramacion', $idProgramacion);
        
        return $query->getOneOrNullResult();
    }
    
    public function descontarCantidadDisponible(ProgramacionEnDia $programacionEnDia){
        $programacionEnDia->setCantidadDisponible($programacionEnDia->getCantidadDisponible()-1);
            if($programacionEnDia->getCantidadDisponible() == 0){
                $programacionEnDia->setEstadoProgramacionEnDia(
                        $this->getEntityManager()->getRepository('AppBundle:EstadoProgramacionEnDia')->findOneByNombre('agotada')
                    );
            }
            $this->getEntityManager()->flush();
    }
    
    public function insertProgramacion(Programacion $programacion){
        //VERIFICO QUE LA PROGRAMACION NO EXISTA YA EN LA TABLA PROGRMACION EN DIA
        $progEnDia = $this->findOneByProgramacion($programacion);
        if(is_null($progEnDia)){
            $estadoVigente = $this->getEntityManager()->getRepository('AppBundle:EstadoProgramacionEnDia')->findOneByNombre('vigente');

            $progEnDia = new ProgramacionEnDia();
            $progEnDia->setProgramacion($programacion);
            $progEnDia->setCantidadDisponible($programacion->getCantidad());
            $progEnDia->setEstadoProgramacionEnDia($estadoVigente);
            $progEnDia->setVencimiento($programacion->getVencimientoDelDia());
        }else{
            $progEnDia->setVencimiento($programacion->getVencimientoDelDia());
        }
        
        $this->getEntityManager()->persist($progEnDia);
        $this->getEntityManager()->flush();
    }
    
    public function deleteProgramacion(Programacion $programacion){
        $progEnDia = $this->findOneByProgramacion($programacion);
        if(!is_null($progEnDia)){
            $em = $this->getEntityManager();
            $em->remove($progEnDia);
            $em->flush();
        }
    }
}
