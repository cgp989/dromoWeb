<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProgramacionEnDiaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProgramacionEnDiaRepository extends EntityRepository
{
    /**
     * @param type $array
     * @return boolean
     */ 
    public function ordenarPorDistanciaALocal(&$array) {
        return uasort($array, function(ProgramacionEnDia $a, ProgramacionEnDia $b) {
            return $a->compareTo($b);
        }
        );
    }
    
    /**
     * 
     * @param integer $idProgramacion
     */
    public function findByIdProgramacion($idProgramacion){
        $query = $this->getEntityManager()
            ->createQuery(
                "select pd
                from AppBundle:ProgramacionEnDia pd
                    join pd.programacion p
                where p.id=:idProgramacion")
            ->setParameter('idProgramacion', $idProgramacion);
        
        return $query->getOneOrNullResult();
    }
    
    public function descontarCantidadDisponible(ProgramacionEnDia $programacionEnDia){
        $programacionEnDia->setCantidadDisponible($programacionEnDia->getCantidadDisponible()-1);
            if($programacionEnDia->getCantidadDisponible() == 0){
                $programacionEnDia->setEstadoProgramacionEnDia(
                        $this->getEntityManager()->getRepository('AppBundle:EstadoProgramacionEnDia')->findOneByNombre('agotada')
                    );
            }
            $this->getEntityManager()->flush();
    }
    
    public function insertProgramacion(Programacion $programacion){
        $arrayDistacia = $programacion->getPromocion()->getLocalComercial()->getSucursalMinimaDistancia();
        $estadoVigente = $this->getEntityManager()->getRepository('AppBundle:EstadoProgramacionEnDia')->findOneByNombre('vigente');
        
        //calculo del vencimineto
        $arrayHoraInicio = getdate($programacion->getHoraInicio()->getTimestamp());
        $duracion = $programacion->getDuracion();
        $horaD = (int) $duracion/2;
        if($duracion%2)
            $minutosD = 30;
        else
            $minutosD = 0;
        
        $fechaVencimiento = new \DateTime('now');
        $fechaVencimiento->setTime($arrayHoraInicio['hours'], $arrayHoraInicio['minutes'], 0);
        $fechaVencimiento->add('PT'.$horaD.'H'.$minutosD.'M');
        
        $progEnDia = new ProgramacionEnDia();
        $progEnDia->setProgramacion($programacion);
        $progEnDia->setCantidadDisponible($programacion->getCantidad());
        $progEnDia->setDistanciaALocalComercial($arrayDistacia['distance']);
        $progEnDia->setSucursalMasCercana($arrayDistacia['title']);
        $progEnDia->setEstadoProgramacionEnDia($estadoVigente);
        $progEnDia->setVencimiento($fechaVencimiento);
        
        $this->getEntityManager()->persist($progEnDia);
        $this->getEntityManager()->flush();
    }
}
